#443 for https, change it to 80 if you do not need it
server.port=443
# key store path and password
server.ssl.key-store=classpath:[jks under resources folder]
server.ssl.key-store-password=[password]
server.ssl.key-password=[password]

spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates
spring.freemarker.charset=UTF-8
spring.mvc.static-path-pattern=/**

# if no need proxy, set it to null
blog.http.proxy.host=null
blog.http.proxy.port=8080

#qcloud object storage system secretID and secret Key
#java document for QCloud: https://cloud.tencent.com/document/product/436/10199
#QCloud API secret key management page: https://console.cloud.tencent.com/cam/capi
blog.qcloud.secretID=[secret ID applied from QCloud]
blog.qcloud.secretKey=[secret Key applied from QCloud]
blog.qcloud.appid=[app ID applied from QCloud]

#information about your COS (Cloud Object Storage) management
#management page is: https://console.cloud.tencent.com/cos5/bucket

blog.qcloud.region=[bucket region]
blog.qcloud.bucket=[bucket ID]
#ping code for basic authentication
blog.pingcode= [authentication simple ping code for markdown file upload or other blog authentication]